import numpy as np

_face_flippin = (
    (24, 254), (249, 7), (157, 384), (163, 390), (144, 373), (333, 104), (161, 388), (228, 448), (145, 477), (23, 253),
    (230, 450), (332, 103), (389, 162), (110, 339), (7, 249), (300, 70), (246, 466), (284, 54), (251, 21), (255, 25),
    (229, 449), (158, 385), (20, 461), (383, 156), (31, 261), (278, 102), (298, 68), (461, 238), (16, 16), (299, 69),
    (160, 387), (301, 71), (353, 124), (28, 258), (85, 315), (245, 465), (231, 451), (17, 17), (33, 263), (56, 286),
    (66, 296), (234, 447), (25, 255), (128, 357), (293, 63), (120, 349), (121, 350), (276, 46), (390, 163), (446, 226),
    (129, 331), (472, 374), (168, 168), (193, 417), (263, 33), (159, 386), (65, 295), (107, 336), (233, 453), (315, 85),
    (111, 340), (69, 299), (476, 469), (189, 413), (318, 80), (88, 310), (244, 464), (270, 40), (337, 108), (368, 139),
    (359, 130), (232, 452), (314, 84), (226, 446), (173, 398), (84, 314), (180, 404), (221, 441), (339, 110),
    (466, 246), (104, 333), (269, 39), (105, 334), (151, 151), (86, 316), (119, 348), (22, 252), (190, 414), (222, 442),
    (55, 285), (475, 470), (306, 61), (471, 474), (15, 15), (117, 346), (153, 380), (35, 265), (242, 354), (27, 257),
    (388, 161), (179, 403), (373, 144), (374, 145), (468, 473), (62, 308), (470, 475), (265, 35), (342, 113),
    (130, 359), (297, 67), (304, 74), (292, 76), (303, 73), (351, 122), (308, 62), (76, 292), (8, 8), (6, 6),
    (409, 185), (469, 476), (404, 180), (108, 337), (26, 256), (61, 306), (272, 42), (52, 282), (380, 153), (181, 405),
    (387, 160), (324, 191), (87, 317), (283, 53), (271, 41), (412, 188), (316, 86), (320, 90), (14, 14), (197, 197),
    (178, 402), (405, 181), (154, 381), (419, 196), (408, 184), (223, 443), (473, 468), (93, 366), (122, 351),
    (112, 341), (334, 105), (9, 9), (243, 463), (321, 91), (403, 179), (417, 193), (305, 59), (319, 89), (445, 225),
    (133, 362), (118, 347), (356, 127), (325, 96), (307, 77), (196, 419), (317, 87), (156, 383), (467, 247), (29, 259),
    (126, 355), (407, 183), (90, 320), (142, 371), (37, 267), (261, 31), (217, 437), (188, 412), (195, 195), (89, 319),
    (155, 382), (253, 23), (100, 329), (462, 20), (209, 429), (248, 3), (402, 178), (3, 248), (174, 399), (236, 456),
    (267, 37), (124, 353), (285, 55), (302, 72), (198, 420), (30, 260), (254, 24), (386, 159), (47, 277), (399, 174),
    (375, 146), (459, 237), (91, 321), (72, 302), (268, 38), (0, 0), (336, 107), (224, 444), (343, 114), (143, 372),
    (113, 342), (247, 467), (114, 343), (311, 81), (51, 281), (49, 279), (477, 472), (101, 330), (235, 455), (131, 360),
    (134, 363), (166, 392), (219, 439), (338, 109), (11, 11), (48, 278), (218, 438), (326, 99), (5, 5), (59, 289),
    (50, 280), (372, 143), (115, 344), (444, 224), (415, 95), (75, 305), (64, 294), (36, 266), (12, 12), (448, 228),
    (79, 309), (264, 34), (456, 236), (370, 125), (252, 22), (220, 440), (362, 155), (260, 30), (39, 269), (465, 245),
    (312, 82), (296, 66), (240, 460), (96, 325), (281, 51), (289, 166), (53, 283), (13, 13), (63, 293), (77, 307),
    (68, 298), (237, 457), (381, 154), (60, 290), (127, 264), (282, 52), (437, 217), (328, 60), (474, 471), (225, 445),
    (239, 459), (95, 415), (45, 275), (413, 189), (385, 158), (203, 423), (38, 268), (277, 47), (123, 352), (98, 327),
    (295, 65), (354, 241), (146, 375), (205, 425), (99, 328), (73, 303), (447, 234), (238, 458), (97, 326), (4, 4),
    (70, 300), (363, 134), (44, 274), (384, 157), (46, 276), (441, 221), (40, 270), (141, 370), (2, 2), (464, 244),
    (451, 231), (275, 45), (94, 94), (420, 198), (185, 409), (184, 408), (74, 304), (10, 10), (357, 128), (82, 312),
    (187, 411), (398, 173), (450, 230), (1, 1), (256, 26), (19, 19), (453, 233), (41, 271), (309, 218), (440, 220),
    (340, 111), (443, 223), (355, 126), (116, 345), (147, 376), (274, 44), (329, 100), (452, 232), (206, 426),
    (183, 407), (449, 229), (259, 29), (81, 311), (414, 190), (350, 121), (42, 272), (191, 324), (177, 401), (341, 112),
    (360, 131), (455, 64), (463, 243), (207, 427), (442, 222), (71, 301), (344, 115), (429, 209), (132, 361),
    (371, 142), (109, 338), (165, 391), (286, 56), (167, 393), (102, 358), (345, 116), (349, 120), (164, 164),
    (67, 297), (92, 322), (213, 433), (439, 219), (257, 27), (139, 368), (279, 49), (137, 323), (258, 28), (330, 101),
    (310, 88), (460, 235), (216, 436), (103, 332), (358, 129), (346, 117), (323, 93), (348, 119), (192, 416),
    (215, 435), (266, 36), (327, 98), (186, 410), (393, 167), (58, 288), (241, 250), (182, 406), (148, 377), (54, 284),
    (377, 148), (176, 400), (83, 313), (366, 137), (423, 203), (152, 152), (80, 318), (361, 177), (162, 389), (457, 79),
    (201, 421), (214, 434), (347, 118), (106, 335), (208, 428), (352, 123), (400, 176), (18, 18), (454, 227),
    (194, 418), (171, 396), (21, 251), (32, 262), (149, 378), (212, 432), (200, 200), (199, 199), (138, 367), (57, 287),
    (140, 369), (204, 424), (280, 50), (175, 175), (172, 397), (396, 171), (43, 273), (202, 422), (313, 83), (428, 208),
    (210, 430), (425, 205), (421, 201), (211, 431), (369, 140), (227, 454), (150, 379), (378, 149), (426, 206),
    (391, 165), (136, 365), (135, 364), (170, 395), (169, 394), (290, 75), (262, 32), (376, 147), (395, 170),
    (406, 182), (288, 58), (418, 194), (379, 150), (411, 187), (435, 215), (427, 207), (322, 92), (365, 136),
    (431, 211), (397, 172), (125, 462), (433, 213), (394, 169), (382, 133), (367, 138), (364, 135), (436, 216),
    (416, 192), (424, 204), (294, 48), (335, 106), (430, 210), (434, 214), (422, 202), (410, 186), (432, 212),
    (291, 78), (458, 239), (273, 43), (250, 242), (287, 57), (78, 291), (401, 132), (34, 356), (392, 240), (438, 97),
    (331, 141))

_pose_flippin = (
    (6, 3), (2, 5), (1, 4), (7, 8), (10, 9), (11, 12), (13, 14), (16, 15), (21, 22), (19, 20), (17, 18), (23, 24),
    (26, 25), (27, 28), (29, 30), (32, 31)
)


class FlippinAugmentation:
    def __init__(self, ds, flip_prob=0.5):
        idx_range_face = ds.idx_range_face
        idx_range_pose = ds.idx_range_pose
        idx_range_hand_left = ds.idx_range_hand_left
        idx_range_hand_right = ds.idx_range_hand_right
        relevant_ids = ds.relevant_ids

        flip_pairs = (
                [(idx_range_face[0] + a, idx_range_face[0] + b) for a, b in _face_flippin] +
                [(idx_range_pose[0] + a, idx_range_pose[0] + b) for a, b in _pose_flippin] +
                [(a, b) for a, b in zip(range(*idx_range_hand_left), range(*idx_range_hand_right))]
        )
        relevant_pairs = [(a, b) for a, b in flip_pairs if (a in relevant_ids and b in relevant_ids) and a != b]

        remapped_pairs = [(relevant_ids.index(a), relevant_ids.index(b)) for a, b in relevant_pairs]
        mapping = {_a: _b for a, b in remapped_pairs for _a, _b in [(a, b), (b, a)]}
        self.src = list(mapping.keys())
        self.dst = list(mapping.values())

        self.flip_prob = flip_prob

    def __call__(self, data):
        if np.random.rand() < self.flip_prob:
            data[:, self.src] = data[:, self.dst]
            data[:, :, 0] = 1 - data[:, :, 0]
        return data
